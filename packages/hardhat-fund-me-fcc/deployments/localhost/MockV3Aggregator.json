{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "initialAnswer",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "current",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AnswerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "newAnswer",
          "type": "int256"
        }
      ],
      "name": "updateAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x739e0c4115ef4c1e8db86f45f7b716cd9c636b18208db951d8b9fd65753585d6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "273699",
    "logsBloom": "0x
    "blockHash": "0x98171c766185c0741ea6016d22114c0f6a8542976767f940b1787aa792142bbe",
    "transactionHash": "0x739e0c4115ef4c1e8db86f45f7b716cd9c636b18208db951d8b9fd65753585d6",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "273699",
    "status": 1,
    "byzantium": true
  },
  "args": [
    200000000000
  ],
  "numDeployments": 1,
  "solcInputHash": "d4c966f5574851e0d08979e97c651b27",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"newAnswer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockV3Interface.sol\":\"MockV3Aggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract MockV3Aggregator {\\n    int256 private _latestAnswer;\\n    uint256 private _latestTimestamp;\\n    uint256 private _latestRound;\\n\\n    event AnswerUpdated(\\n        int256 indexed current,\\n        uint256 indexed roundId,\\n        uint256 updatedAt\\n    );\\n\\n    constructor(int256 initialAnswer) {\\n        _latestAnswer = initialAnswer;\\n        _latestTimestamp = block.timestamp;\\n        _latestRound = 1;\\n    }\\n\\n    function latestAnswer() external view returns (int256) {\\n        return _latestAnswer;\\n    }\\n\\n    function latestTimestamp() external view returns (uint256) {\\n        return _latestTimestamp;\\n    }\\n\\n    function latestRound() external view returns (uint256) {\\n        return _latestRound;\\n    }\\n\\n    function updateAnswer(int256 newAnswer) external {\\n        _latestAnswer = newAnswer;\\n        _latestTimestamp = block.timestamp;\\n        _latestRound++;\\n        emit AnswerUpdated(newAnswer, _latestRound, _latestTimestamp);\\n    }\\n}\\n\",\"keccak256\":\"0xf38a241fc47bd5d7125d6cbb8d19048bd43768bbb4e0481e918db9ba7928e2a9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161038338038061038383398181016040528101906100329190610089565b80600081905550426001819055506001600281905550506100b6565b600080fd5b6000819050919050565b61006681610053565b811461007157600080fd5b50565b6000815190506100838161005d565b92915050565b60006020828403121561009f5761009e61004e565b5b60006100ad84828501610074565b91505092915050565b6102be806100c56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806350d25bcd14610051578063668a0f021461006f5780638205bf6a1461008d578063a87a20ce146100ab575b600080fd5b6100596100c7565b6040516100669190610163565b60405180910390f35b6100776100d0565b6040516100849190610197565b60405180910390f35b6100956100da565b6040516100a29190610197565b60405180910390f35b6100c560048036038101906100c091906101e3565b6100e4565b005b60008054905090565b6000600254905090565b6000600154905090565b8060008190555042600181905550600260008154809291906101059061023f565b9190505550600254817f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f60015460405161013f9190610197565b60405180910390a350565b6000819050919050565b61015d8161014a565b82525050565b60006020820190506101786000830184610154565b92915050565b6000819050919050565b6101918161017e565b82525050565b60006020820190506101ac6000830184610188565b92915050565b600080fd5b6101c08161014a565b81146101cb57600080fd5b50565b6000813590506101dd816101b7565b92915050565b6000602082840312156101f9576101f86101b2565b5b6000610207848285016101ce565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061024a8261017e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027d5761027c610210565b5b60018201905091905056fea26469706673582212207ef74758a12b3ee7c69f86c6cb9080bb0b2fbd5b8190985b3679bc47705d4a5064736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806350d25bcd14610051578063668a0f021461006f5780638205bf6a1461008d578063a87a20ce146100ab575b600080fd5b6100596100c7565b6040516100669190610163565b60405180910390f35b6100776100d0565b6040516100849190610197565b60405180910390f35b6100956100da565b6040516100a29190610197565b60405180910390f35b6100c560048036038101906100c091906101e3565b6100e4565b005b60008054905090565b6000600254905090565b6000600154905090565b8060008190555042600181905550600260008154809291906101059061023f565b9190505550600254817f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f60015460405161013f9190610197565b60405180910390a350565b6000819050919050565b61015d8161014a565b82525050565b60006020820190506101786000830184610154565b92915050565b6000819050919050565b6101918161017e565b82525050565b60006020820190506101ac6000830184610188565b92915050565b600080fd5b6101c08161014a565b81146101cb57600080fd5b50565b6000813590506101dd816101b7565b92915050565b6000602082840312156101f9576101f86101b2565b5b6000610207848285016101ce565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061024a8261017e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027d5761027c610210565b5b60018201905091905056fea26469706673582212207ef74758a12b3ee7c69f86c6cb9080bb0b2fbd5b8190985b3679bc47705d4a5064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/mocks/MockV3Interface.sol:MockV3Aggregator",
        "label": "_latestAnswer",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 5,
        "contract": "contracts/mocks/MockV3Interface.sol:MockV3Aggregator",
        "label": "_latestTimestamp",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/mocks/MockV3Interface.sol:MockV3Aggregator",
        "label": "_latestRound",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}